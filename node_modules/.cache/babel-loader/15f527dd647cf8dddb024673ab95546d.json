{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andy\\\\Documents\\\\GitHub\\\\Stranger Things\\\\src\\\\components\\\\EditPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { updatePost } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPost = _ref => {\n  _s();\n  let {\n    posts,\n    token\n  } = _ref;\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver\n  } = currentPost;\n  const [newTitle, setNewTitle] = useState(title);\n  const [newDescription, setNewDescription] = useState(description);\n  const [newLocation, setNewLocation] = useState(location);\n  const [newPrice, setNewPrice] = useState(price);\n  const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\n  async function editPost() {\n    const updatedPost = {\n      token: token,\n      title: newTitle,\n      description: newDescription,\n      location: newLocation,\n      price: newPrice,\n      willDeliver: newWillDeliver,\n      _id: postID\n    };\n    await updatePost(updatedPost);\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      editPost();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: title,\n        onChange: event => setNewTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: description,\n        onChange: event => setNewDescription(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Location:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: location,\n        onChange: event => setNewLocation(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New Price:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: price,\n        onChange: event => setNewPrice(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Will deliver? Click the box for yes:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: newWillDeliver,\n        onChange: event => setNewWillDeliver(event.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(EditPost, \"kIu+3U8axVvoGz6EsKkI5T9LmGc=\", false, function () {\n  return [useParams];\n});\n_c = EditPost;\nexport default EditPost;\nvar _c;\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"names":["React","useState","useParams","updatePost","EditPost","posts","token","postID","currentPost","filter","post","_id","title","description","location","price","willDeliver","newTitle","setNewTitle","newDescription","setNewDescription","newLocation","setNewLocation","newPrice","setNewPrice","newWillDeliver","setNewWillDeliver","editPost","updatedPost","event","preventDefault","target","value","checked"],"sources":["C:/Users/Andy/Documents/GitHub/Stranger Things/src/components/EditPost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { updatePost } from '../api/api';\r\n\r\nconst EditPost= ({ posts, token }) => {\r\n    const { postID } = useParams();\r\n\r\n    const [currentPost] = posts.filter(post => post._id === postID);\r\n\r\n    const { title, description, location, price, willDeliver, } = currentPost;\r\n\r\n    const [newTitle, setNewTitle] = useState(title);\r\n    const [newDescription, setNewDescription] = useState(description);\r\n    const [newLocation, setNewLocation] = useState(location);\r\n    const [newPrice, setNewPrice] = useState(price);\r\n    const [newWillDeliver, setNewWillDeliver] = useState(willDeliver);\r\n\r\n    async function editPost() {\r\n        const updatedPost = {\r\n            token: token,\r\n            title: newTitle,\r\n            description: newDescription,\r\n            location: newLocation,\r\n            price: newPrice,\r\n            willDeliver: newWillDeliver,\r\n            _id: postID\r\n        }\r\n        await updatePost(updatedPost)\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(event) => {\r\n            event.preventDefault();\r\n            editPost();\r\n        } }>\r\n            <div>\r\n                <label>New Title:</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={title}\r\n                    onChange={(event) => setNewTitle(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>New Description:</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={description}\r\n                    onChange={(event) => setNewDescription(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>New Location:</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={location}\r\n                    onChange={(event) => setNewLocation(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>New Price:</label>\r\n                <input\r\n                    type='text'\r\n                    placeholder={price}\r\n                    onChange={(event) => setNewPrice(event.target.value)} />\r\n            </div>\r\n            <div>\r\n                <label>Will deliver? Click the box for yes:</label>\r\n                <input\r\n                    type='checkbox'\r\n                    checked={newWillDeliver}\r\n                    onChange={(event) => setNewWillDeliver(event.target.checked)} />\r\n            </div>\r\n    \r\n            <button type='submit'>Edit Post</button>\r\n           \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default EditPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}