{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andy\\\\Documents\\\\GitHub\\\\Stranger Things\\\\src\\\\components\\\\SinglePost.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { createMessage } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SendMessage = _ref => {\n  _s();\n  let {\n    postID,\n    token\n  } = _ref;\n  const [message, setMessage] = useState({\n    content: ''\n  });\n  async function addMessage() {\n    await createMessage({\n      postID,\n      message,\n      token\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => {\n      event.preventDefault();\n      addMessage();\n      console.log('message has been sent');\n      setMessage('');\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter Message\",\n      onChange: event => setMessage({\n        content: event.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(SendMessage, \"yQIX9rk7a6C0ipVttj9Exd7EeZ4=\");\n_c = SendMessage;\nconst SinglePost = _ref2 => {\n  _s2();\n  let {\n    posts,\n    token\n  } = _ref2;\n  const [activateMessage, setActivateMessage] = useState(false);\n  const {\n    postID\n  } = useParams();\n  const [currentPost] = posts.filter(post => post._id === postID);\n  const {\n    title,\n    description,\n    location,\n    price,\n    willDeliver,\n    _id\n  } = currentPost;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Description: \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Location: \", location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Price: \", price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" willDeliver: \", willDeliver, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setActivateMessage(!activateMessage),\n      children: \"Message this user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), activateMessage && /*#__PURE__*/_jsxDEV(SendMessage, {\n      postID: postID,\n      token: token\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s2(SinglePost, \"SaCcpfA+IAwaFepjA28zt0MOekY=\", false, function () {\n  return [useParams];\n});\n_c2 = SinglePost;\nexport default SinglePost;\nvar _c, _c2;\n$RefreshReg$(_c, \"SendMessage\");\n$RefreshReg$(_c2, \"SinglePost\");","map":{"version":3,"names":["React","useState","useParams","createMessage","SendMessage","postID","token","message","setMessage","content","addMessage","event","preventDefault","console","log","target","value","SinglePost","posts","activateMessage","setActivateMessage","currentPost","filter","post","_id","title","description","location","price","willDeliver"],"sources":["C:/Users/Andy/Documents/GitHub/Stranger Things/src/components/SinglePost.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { createMessage } from '../api/api';\r\n\r\nconst SendMessage = ({ postID, token }) => {\r\n    const [message, setMessage] = useState({ content: '' });\r\n\r\n    async function addMessage() {\r\n        await createMessage({ postID, message, token })\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={(event) => {\r\n            event.preventDefault();\r\n            addMessage();\r\n            console.log('message has been sent');\r\n            setMessage('');\r\n        }}>\r\n            <input\r\n                type='text'\r\n                placeholder='Enter Message'\r\n                onChange={(event) => setMessage({ content: event.target.value })}\r\n            />\r\n            <button type='submit'>Send Message</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst SinglePost = ({ posts, token }) => {\r\n    const [activateMessage, setActivateMessage] = useState(false);\r\n\r\n    const { postID } = useParams();\r\n\r\n    const [currentPost] = posts.filter(post => post._id === postID);\r\n\r\n    const { title, description, location, price, willDeliver, _id } = currentPost;\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>{title}</h3>\r\n                <p> Description: {description}</p>\r\n                <p> Location: {location}</p>\r\n                <p> Price: {price}</p>\r\n                <p> willDeliver: {willDeliver} </p>\r\n            </div>\r\n            <button onClick={() => setActivateMessage(!activateMessage)}>Message this user</button>\r\n            {\r\n                activateMessage && <SendMessage postID={postID} token={token} />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePost;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,QAAQ,YAAY;AAAC;AAE3C,MAAMC,WAAW,GAAG,QAAuB;EAAA;EAAA,IAAtB;IAAEC,MAAM;IAAEC;EAAM,CAAC;EAClC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IAAEQ,OAAO,EAAE;EAAG,CAAC,CAAC;EAEvD,eAAeC,UAAU,GAAG;IACxB,MAAMP,aAAa,CAAC;MAAEE,MAAM;MAAEE,OAAO;MAAED;IAAM,CAAC,CAAC;EACnD;EAEA,oBACI;IAAM,QAAQ,EAAGK,KAAK,IAAK;MACvBA,KAAK,CAACC,cAAc,EAAE;MACtBF,UAAU,EAAE;MACZG,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpCN,UAAU,CAAC,EAAE,CAAC;IAClB,CAAE;IAAA,wBACE;MACI,IAAI,EAAC,MAAM;MACX,WAAW,EAAC,eAAe;MAC3B,QAAQ,EAAGG,KAAK,IAAKH,UAAU,CAAC;QAAEC,OAAO,EAAEE,KAAK,CAACI,MAAM,CAACC;MAAM,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QACnE,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB;EAAA;IAAA;IAAA;IAAA;EAAA,QACxC;AAEf,CAAC;AAAA,GAtBKZ,WAAW;AAAA,KAAXA,WAAW;AAwBjB,MAAMa,UAAU,GAAG,SAAsB;EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEZ;EAAM,CAAC;EAChC,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM;IAAEI;EAAO,CAAC,GAAGH,SAAS,EAAE;EAE9B,MAAM,CAACmB,WAAW,CAAC,GAAGH,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKnB,MAAM,CAAC;EAE/D,MAAM;IAAEoB,KAAK;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,WAAW;IAAEL;EAAI,CAAC,GAAGH,WAAW;EAE7E,oBACI;IAAA,wBACI;MAAA,wBACI;QAAA,UAAKI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eAChB;QAAA,6BAAkBC,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAClC;QAAA,0BAAeC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAC5B;QAAA,uBAAYC,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eACtB;QAAA,6BAAkBC,WAAW;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACjC,eACN;MAAQ,OAAO,EAAE,MAAMT,kBAAkB,CAAC,CAACD,eAAe,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA2B,EAEnFA,eAAe,iBAAI,QAAC,WAAW;MAAC,MAAM,EAAEd,MAAO;MAAC,KAAK,EAAEC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAElE;AAEd,CAAC;AAAA,IAxBKW,UAAU;EAAA,QAGOf,SAAS;AAAA;AAAA,MAH1Be,UAAU;AA0BhB,eAAeA,UAAU;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module"}